<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bigjava.dao.KeyDao">
<!--   Key getKeyById(Integer id);  -->
    <select id="getKeyById" resultMap="myKey">
        select `key`.*,`lock`.id lid,`lock`.lockName from mybatis_0228.t_key `key`
            left join mybatis_0228.t_lock `lock`
                on `lock`.id =`key`.lockId
            where `key`.id = #{id}
    </select>
    <!--  自定义封装规则，使用级联属性封装联合查询出的结婚  -->
<!--    <resultMap id="myKey" type="org.bigjava.bean.Key">-->
<!--        <id property="id" column="id"/>-->
<!--        <result property="keyName" column="keyName"/>-->
<!--        <result property="lock.id" column="lid"/>-->
<!--        <result property="lock.lockName" column="lockName"/>-->
<!--    </resultMap>-->

    <!--  mybatis推荐使用association标签  -->
    <resultMap id="myKey" type="org.bigjava.bean.Key">
        <id property="id" column="id"/>
        <result property="keyName" column="keyName"/>
        <!--    接下来的属性是一个对象，自定义这个对象的封装规则，使用association表示联合了一个对象    -->
        <!-- javaType="" 指定这个属性的类型，写全类名 -->
        <association property="lock" javaType="org.bigjava.bean.Lock">
            <!--  定义lock属性对应的这个Lock对象如何封装 -->
            <id property="id" column="id"/>
            <result property="lockName" column="lockName"/>
        </association>
    </resultMap>
</mapper>